#!/usr/bin/env python
"""fetch metadata describing a single random interpretation"""

## system
import logging

## app engine
from google.appengine.ext import webapp
from google.appengine.ext.webapp.util import run_wsgi_app

## this app
from pypoot import interpretation

class Poot(webapp.RequestHandler):
    """request handler for /poot"""

    def get(self):
        """handle a get request"""

        key_string = None
        if self.request.get('key'):
            key_string = self.request.get('key')

        status  = None
        content = None
        i       = None
        try:
            i = interpretation.poot(key_string)
        except interpretation.NoInterpretation:
            status  = 404
            content = { 'error': 'Not Found' }
        except Exception, error:
            logging.error("Unhandled (generic) exception: %s", str(error))
            status  = 500
            content = { 'error': str(error) }
        else:
            status  = 200
            content = { 'title': i.title,
                        'author': i.author,
                        'type': i.type,
                        'decorated_location': "/interpretation/%s" % i.key(),
                        'content_location': "/i/%s" % i.key() }

        self.response.set_status(status)
        if 'Content-Type' in self.response.headers:
            del self.response.headers['Content-Type']
        self.response.headers.add_header('Content-Type', 'text/plain')

        ## string dictionary to json...
        first = 1
        json = "{" 
        for key, value in content.iteritems():
            if not first:
                json += ","
            json += "\"%s\": \"%s\"" % (key, value)
            first = 0
        json += "}"

        self.response.out.write(json)

APPLICATION = webapp.WSGIApplication([('/poot', Poot)], debug=True)

def main():
    """invoke the wsgi thingy"""
    run_wsgi_app(APPLICATION)

if __name__ == "__main__":
    main()
